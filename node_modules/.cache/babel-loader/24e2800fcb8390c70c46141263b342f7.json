{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailsProduct: {},\n      modal: {\n        product: {},\n        modalOpen: false\n      }\n    };\n\n    this.getItem = id => {\n      console.log(\"hello from getItem\");\n      let product;\n      this.state.products.forEach(item => {\n        if (item.id === id) {\n          product = { ...item\n          };\n        }\n      }); // const product = this.state.products.find(item => item.id === id);\n\n      console.log(\"getItem id is: \" + id);\n      console.log(\"getItem product is: \");\n      console.log(product);\n      return product;\n    };\n\n    this.handleDetails = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailsProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      console.log('hello from addToCart');\n    };\n\n    this.openModal = id => {\n      console.log('hello from openModal');\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = id => {\n      console.log('hello from closeModal');\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Context has mounted\");\n    this.setProducts();\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    console.log(\"hello from setProducts\");\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts.push(singleItem);\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        setProducts: this.setProducts,\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart,\n        getItem: this.getItem\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","detailsProduct","modal","product","modalOpen","getItem","id","console","log","forEach","item","handleDetails","setState","addToCart","openModal","modalProduct","closeModal","componentDidMount","setProducts","tempProducts","singleItem","push","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailsProduct: {},\n        modal: {\n            product: {},\n            modalOpen: false\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"Context has mounted\")\n        this.setProducts();\n    }\n    \n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        console.log(\"hello from setProducts\")\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    getItem = id => {\n        console.log(\"hello from getItem\")\n        let product;\n        this.state.products.forEach( item => {\n            if (item.id === id) {\n                product = {...item};\n            }\n        });\n        // const product = this.state.products.find(item => item.id === id);\n        console.log(\"getItem id is: \" + id)\n        console.log(\"getItem product is: \")\n        console.log(product)\n        return product;\n    }\n\n    // getItem = index => {\n    //     let product = {...this.state.products[index]};\n    //     return product;\n    // }\n\n\n    handleDetails = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailsProduct: product}\n        });\n    }\n\n    addToCart = id => {\n        console.log('hello from addToCart');\n    }\n\n    openModal = id => {\n        console.log('hello from openModal');\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct: product, modalOpen: true};\n        })\n    }\n\n    closeModal = id => {\n        console.log('hello from closeModal');\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider \n                value={{\n                    ...this.state, \n                    setProducts: this.setProducts,\n                    handleDetails: this.handleDetails,\n                    addToCart: this.addToCart,\n                    getItem: this.getItem\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}