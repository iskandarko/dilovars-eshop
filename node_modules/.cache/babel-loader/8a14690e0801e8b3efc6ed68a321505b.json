{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/components/Product.js\";\nimport React, { Component } from 'react';\nimport { Col, Card, Button, Container } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { ProductConsumer } from '../context';\nimport { Link } from 'react-router-dom';\n\nclass Product extends Component {\n  render() {\n    const {\n      id,\n      title,\n      img,\n      price,\n      inCart,\n      handleDetails\n    } = this.props.product;\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"my-3 mx-auto\",\n      xs: \"9\",\n      sm: \"6\",\n      lg: \"4\",\n      xl: \"3\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        onClick: () => {\n          this.props.handleDetails(id);\n        },\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/details\",\n          children: /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: img,\n            alt: \"product\",\n            className: \"p-5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          className: \"p-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-end\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              disabled: inCart,\n              children: inCart ? \"В корзине\" : \"Добавить\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n            className: \"d-flex justify-content-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"align-self-center mb-0\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-0\",\n              children: [\"$\", price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  }\n\n} //Setting the required types for the props values (throws an error to the console, if not matched)\n\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.number,\n    img: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n    inCart: PropTypes.bool,\n    total: PropTypes.number\n  }).isRequired\n};\nexport default Product;","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/components/Product.js"],"names":["React","Component","Col","Card","Button","Container","PropTypes","ProductConsumer","Link","Product","render","id","title","img","price","inCart","handleDetails","props","product","propTypes","shape","number","string","bool","total","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,iBAA7C;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,eAAR,QAA8B,YAA9B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;AAC5BS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,GAAb;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA,MAAzB;AAAiCC,MAAAA;AAAjC,QAAkD,KAAKC,KAAL,CAAWC,OAAnE;AACA,wBACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAC,GAAjC;AAAqC,MAAA,EAAE,EAAC,GAAxC;AAA4C,MAAA,EAAE,EAAC,GAA/C;AAAmD,MAAA,EAAE,EAAC,GAAtD;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKD,KAAL,CAAWD,aAAX,CAAyBL,EAAzB;AAA6B,SAAnD;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,UAAT;AAAA,iCACI,QAAC,IAAD,CAAM,GAAN;AACI,YAAA,OAAO,EAAC,KADZ;AAEI,YAAA,GAAG,EAAEE,GAFT;AAGI,YAAA,GAAG,EAAC,SAHR;AAII,YAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAC,KAArB;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,mCACI,QAAC,MAAD;AACI,cAAA,OAAO,EAAC,SADZ;AAEI,cAAA,QAAQ,EAAEE,MAFd;AAAA,wBAIKA,MAAM,GAAG,WAAH,GAAiB;AAJ5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,IAAD,CAAM,MAAN;AAAa,YAAA,SAAS,EAAC,gCAAvB;AAAA,oCACI;AAAG,cAAA,SAAS,EAAC,wBAAb;AAAA,wBAAuCH;AAAvC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA,8BAAuBE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AA4BH;;AA/B2B,C,CAkChC;;;AACAL,OAAO,CAACU,SAAR,GAAoB;AAChBD,EAAAA,OAAO,EAAEZ,SAAS,CAACc,KAAV,CAAgB;AACrBT,IAAAA,EAAE,EAAEL,SAAS,CAACe,MADO;AAErBR,IAAAA,GAAG,EAAEP,SAAS,CAACgB,MAFM;AAGrBV,IAAAA,KAAK,EAAEN,SAAS,CAACgB,MAHI;AAIrBR,IAAAA,KAAK,EAAER,SAAS,CAACe,MAJI;AAKrBN,IAAAA,MAAM,EAAET,SAAS,CAACiB,IALG;AAMrBC,IAAAA,KAAK,EAAElB,SAAS,CAACe;AANI,GAAhB,EAONI;AARa,CAApB;AAYA,eAAehB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Col, Card, Button, Container } from 'react-bootstrap';\nimport {PropTypes} from 'prop-types';\nimport {ProductConsumer} from '../context';\nimport {Link} from 'react-router-dom';\n\nclass Product extends Component {\n    render() { \n        const { id, title, img, price, inCart, handleDetails} = this.props.product;\n        return ( \n            <Col className=\"my-3 mx-auto\" xs=\"9\" sm=\"6\" lg=\"4\" xl=\"3\">\n                <Card onClick={() => {this.props.handleDetails(id)}}>\n                    <Link to=\"/details\">\n                        <Card.Img \n                            variant=\"top\" \n                            src={img} \n                            alt=\"product\" \n                            className=\"p-5\"\n                        />\n                    </Link>\n                    <Card.Body className=\"p-0\">\n                        <div className=\"d-flex justify-content-end\">\n                            <Button \n                                variant=\"success\" \n                                disabled={inCart} \n                            >\n                                {inCart ? \"В корзине\" : \"Добавить\"}\n                            </Button>\n                        </div>\n                        <Card.Footer className=\"d-flex justify-content-between\">\n                            <p className=\"align-self-center mb-0\">{title}</p>\n                            <h5 className=\"mb-0\">${price}</h5>\n                        </Card.Footer>\n                    </Card.Body>\n                </Card>\n            </Col>\n         );\n    }\n}\n \n//Setting the required types for the props values (throws an error to the console, if not matched)\nProduct.propTypes = {\n    product: PropTypes.shape({\n        id: PropTypes.number,\n        img: PropTypes.string,\n        title: PropTypes.string,\n        price: PropTypes.number,\n        inCart: PropTypes.bool,\n        total: PropTypes.number\n    }).isRequired\n}\n\n \nexport default Product;"]},"metadata":{},"sourceType":"module"}