{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct\n    };\n\n    this.handleDetails = id => {\n      let tempProduct;\n      this.state.products.forEach(item => {\n        if (item.id === id) {\n          tempProduct = { ...item\n          };\n        }\n      });\n      this.setState(() => {\n        console.log(tempProduct);\n        return {\n          detailProduct: tempProduct\n        };\n      });\n      console.log(this.state.detailProduct);\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts.push(singleItem);\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  addToCart() {\n    console.log('hello from addToCart');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        //pass the whole state to this object\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","handleDetails","id","tempProduct","forEach","item","setState","console","log","componentDidMount","setProducts","tempProducts","singleItem","push","addToCart","render","props","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SAUpCM,KAVoC,GAU5B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJN,MAAAA,aAAa,EAAEA;AAFX,KAV4B;;AAAA,SA+BpCO,aA/BoC,GA+BnBC,EAAD,IAAQ;AACpB,UAAIC,WAAJ;AACA,WAAKJ,KAAL,CAAWC,QAAX,CAAoBI,OAApB,CAA6BC,IAAI,IAAI;AACjC,YAAIA,IAAI,CAACH,EAAL,KAAYA,EAAhB,EAAoB;AAChBC,UAAAA,WAAW,GAAG,EAAC,GAAGE;AAAJ,WAAd;AACH;AACJ,OAJD;AAKA,WAAKC,QAAL,CAAc,MAAM;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AACA,eAAO;AAACT,UAAAA,aAAa,EAAES;AAAhB,SAAP;AACH,OAHD;AAIAI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWL,aAAvB;AACH,KA3CmC;AAAA;;AAepCe,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACH,GAjBmC,CAmBpC;;;AACAA,EAAAA,WAAW,GAAG;AACV,QAAIC,YAAY,GAAG,EAAnB;AACAhB,IAAAA,aAAa,CAACS,OAAd,CAAsBC,IAAI,IAAI;AAC1B,YAAMO,UAAU,GAAG,EAAC,GAAGP;AAAJ,OAAnB;AACAM,MAAAA,YAAY,CAACE,IAAb,CAAkBD,UAAlB;AACH,KAHD;AAIA,SAAKN,QAAL,CAAc,MAAM;AAChB,aAAO;AAACN,QAAAA,QAAQ,EAAEW;AAAX,OAAP;AACH,KAFD;AAGH;;AAgBDG,EAAAA,SAAS,GAAG;AACRP,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAC5B,GAAG,KAAKhB,KADoB;AACb;AACfE,QAAAA,aAAa,EAAE,KAAKA,aAFQ;AAG5Ba,QAAAA,SAAS,EAAE,KAAKA;AAHY,OAAhC;AAAA,gBAKK,KAAKE,KAAL,CAAWC;AALhB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA3DmC;;AA8DxC,MAAMC,eAAe,GAAGtB,cAAc,CAACuB,QAAvC;AAEA,SAAQrB,eAAR,EAAyBoB,eAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = { \n    //         products: [],\n    //         detailProduct: detailProduct\n    //     }\n    //     this.handleDetails=this.handleDetails.bind(this);\n    // }\n\n    state = {\n        products: [],\n        detailProduct: detailProduct\n    }\n\n    componentDidMount() {\n        this.setProducts();\n    }\n\n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    handleDetails = (id) => {\n        let tempProduct;\n        this.state.products.forEach( item => {\n            if (item.id === id) {\n                tempProduct = {...item};\n            }\n        });\n        this.setState(() => {\n            console.log(tempProduct)\n            return {detailProduct: tempProduct}\n        });\n        console.log(this.state.detailProduct)\n    }\n\n    addToCart() {\n        console.log('hello from addToCart');\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider value={{\n                ...this.state, //pass the whole state to this object\n                handleDetails: this.handleDetails,\n                addToCart: this.addToCart,\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}