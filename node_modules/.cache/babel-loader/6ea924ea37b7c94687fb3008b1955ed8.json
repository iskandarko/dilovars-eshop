{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      detailsProduct: {},\n      modalProduct: detailProduct,\n      modalOpen: false\n    };\n\n    this.getItem = id => {\n      console.log(\"hello from getItem\");\n      let product;\n      this.state.products.forEach(item => {\n        if (item.id === id) {\n          product = { ...item\n          };\n        }\n      }); // const product = this.state.products.find(item => item.id === id);\n\n      console.log(\"getItem id is: \" + id);\n      console.log(\"getItem product is: \");\n      console.log(product);\n      return product;\n    };\n\n    this.handleDetails = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailsProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      console.log('Hello from addToCart!');\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1; //???\n\n      const price = product.price; //???\n\n      product.total = price; //???\n\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        }, () => {\n          console.log(this.state);\n        };\n      });\n    };\n\n    this.openModal = id => {\n      console.log('hello from openModal');\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      console.log('hello from closeModal');\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Context has mounted\");\n    this.setProducts();\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    console.log(\"hello from setProducts\");\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts.push(singleItem);\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        setProducts: this.setProducts,\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart,\n        getItem: this.getItem,\n        openModal: this.openModal,\n        closeModal: this.closeModal\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","cart","detailsProduct","modalProduct","modalOpen","getItem","id","console","log","product","forEach","item","handleDetails","setState","addToCart","tempProducts","index","indexOf","inCart","count","price","total","openModal","closeModal","componentDidMount","setProducts","singleItem","push","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        cart: [],\n        detailsProduct: {},\n        modalProduct: detailProduct,\n        modalOpen: false\n    }\n\n    componentDidMount() {\n        console.log(\"Context has mounted\")\n        this.setProducts();\n    }\n    \n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        console.log(\"hello from setProducts\")\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    getItem = id => {\n        console.log(\"hello from getItem\")\n        let product;\n        this.state.products.forEach( item => {\n            if (item.id === id) {\n                product = {...item};\n            }\n        });\n        // const product = this.state.products.find(item => item.id === id);\n        console.log(\"getItem id is: \" + id)\n        console.log(\"getItem product is: \")\n        console.log(product)\n        return product;\n    }\n\n    // getItem = index => {\n    //     let product = {...this.state.products[index]};\n    //     return product;\n    // }\n\n\n    handleDetails = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailsProduct: product}\n        });\n    }\n\n    addToCart = id => {\n        console.log('Hello from addToCart!');\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1; //???\n        const price = product.price; //???\n        product.total = price; //???\n        this.setState(() => {\n            return (\n                {\n                    products: tempProducts,\n                    cart: [...this.state.cart, product]\n                },\n                () => {\n                    console.log(this.state);\n                }\n            );\n        });\n    }\n\n    openModal = id => {\n        console.log('hello from openModal');\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct: product, modalOpen: true};\n        });\n    }\n\n    closeModal = () => {\n        console.log('hello from closeModal');\n        this.setState(() => {\n            return {modalOpen: false}\n        });\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider \n                value={{\n                    ...this.state, \n                    setProducts: this.setProducts,\n                    handleDetails: this.handleDetails,\n                    addToCart: this.addToCart,\n                    getItem: this.getItem,\n                    openModal: this.openModal,\n                    closeModal: this.closeModal,\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}