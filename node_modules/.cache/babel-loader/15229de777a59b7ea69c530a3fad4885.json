{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts.push(singleItem);\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.handleDetails = id => {\n      let tempProduct;\n      this.state.products.forEach(item => {\n        if (item.id === id) {\n          tempProduct = { ...item\n          };\n        }\n      });\n      this.setState(() => {\n        console.log(tempProduct);\n        return {\n          detailProduct: tempProduct\n        };\n      });\n      console.log(this.state.detailProduct);\n    };\n\n    this.state = {\n      products: [],\n      detailProduct: detailProduct\n    };\n    this.handleDetails = this.handleDetails.bind(this);\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  addToCart() {\n    console.log('hello from addToCart');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        //pass the whole state to this object\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","constructor","props","setProducts","tempProducts","forEach","item","singleItem","push","setState","products","handleDetails","id","tempProduct","state","console","log","bind","componentDidMount","addToCart","render","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AACpCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAcnBC,WAdmB,GAcL,MAAM;AAChB,UAAIC,YAAY,GAAG,EAAnB;AACAP,MAAAA,aAAa,CAACQ,OAAd,CAAsBC,IAAI,IAAI;AAC1B,cAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,SAAnB;AACAF,QAAAA,YAAY,CAACI,IAAb,CAAkBD,UAAlB;AACH,OAHD;AAIA,WAAKE,QAAL,CAAc,MAAM;AAChB,eAAO;AAACC,UAAAA,QAAQ,EAAEN;AAAX,SAAP;AACH,OAFD;AAGH,KAvBkB;;AAAA,SAyBnBO,aAzBmB,GAyBFC,EAAD,IAAQ;AACpB,UAAIC,WAAJ;AACA,WAAKC,KAAL,CAAWJ,QAAX,CAAoBL,OAApB,CAA6BC,IAAI,IAAI;AACjC,YAAIA,IAAI,CAACM,EAAL,KAAYA,EAAhB,EAAoB;AAChBC,UAAAA,WAAW,GAAG,EAAC,GAAGP;AAAJ,WAAd;AACH;AACJ,OAJD;AAKA,WAAKG,QAAL,CAAc,MAAM;AAChBM,QAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,eAAO;AAACjB,UAAAA,aAAa,EAAEiB;AAAhB,SAAP;AACH,OAHD;AAIAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWlB,aAAvB;AACH,KArCkB;;AAEf,SAAKkB,KAAL,GAAa;AACTJ,MAAAA,QAAQ,EAAE,EADD;AAETd,MAAAA,aAAa,EAAEA;AAFN,KAAb;AAIA,SAAKe,aAAL,GAAmB,KAAKA,aAAL,CAAmBM,IAAnB,CAAwB,IAAxB,CAAnB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,WAAL;AACH,GAZmC,CAcpC;;;AA0BAgB,EAAAA,SAAS,GAAG;AACRJ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAC5B,GAAG,KAAKN,KADoB;AACb;AACfH,QAAAA,aAAa,EAAE,KAAKA,aAFQ;AAG5BQ,QAAAA,SAAS,EAAE,KAAKA;AAHY,OAAhC;AAAA,gBAKK,KAAKjB,KAAL,CAAWmB;AALhB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAtDmC;;AAyDxC,MAAMC,eAAe,GAAGxB,cAAc,CAACyB,QAAvC;AAEA,SAAQvB,eAAR,EAAyBsB,eAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            products: [],\n            detailProduct: detailProduct\n        }\n        this.handleDetails=this.handleDetails.bind(this);\n    }\n\n    componentDidMount() {\n        this.setProducts();\n    }\n\n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts = () => { \n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    handleDetails = (id) => {\n        let tempProduct;\n        this.state.products.forEach( item => {\n            if (item.id === id) {\n                tempProduct = {...item};\n            }\n        });\n        this.setState(() => {\n            console.log(tempProduct)\n            return {detailProduct: tempProduct}\n        });\n        console.log(this.state.detailProduct)\n    }\n\n    addToCart() {\n        console.log('hello from addToCart');\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider value={{\n                ...this.state, //pass the whole state to this object\n                handleDetails: this.handleDetails,\n                addToCart: this.addToCart,\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}