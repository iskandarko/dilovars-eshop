{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      productDetails: detailProduct\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetails = id => {\n      // let tempProduct;\n      // this.state.products.forEach( item => {\n      //     if (item.id === id) {\n      //         tempProduct = {...item};\n      //         console.log('I found it! it is:');\n      //         console.log(tempProduct);\n      //     }\n      // });\n      // const product = this.getItem(id);\n      const product = {\n        id: 2,\n        title: \"Samsung S7\",\n        img: \"img/product-2.png\",\n        price: 16,\n        company: \"SAMSUNG\",\n        info: \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n        inCart: false,\n        count: 0,\n        total: 0\n      };\n      this.setState(() => {\n        return {\n          productDetails: product\n        };\n      }, () => {\n        console.log(\"state updated!!!!\");\n      });\n      console.log(\"after change the detail product is\");\n      console.log(this.state.productDetails);\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n    console.log('context component was updated');\n    console.log(this.state.productDetails);\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts.push(singleItem);\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  addToCart() {\n    console.log('hello from addToCart');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        //pass the whole state to this object\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","productDetails","getItem","id","product","find","item","handleDetails","title","img","price","company","info","inCart","count","total","setState","console","log","componentDidMount","setProducts","tempProducts","forEach","singleItem","push","addToCart","render","props","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC5B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,cAAc,EAAEP;AAFZ,KAD4B;;AAAA,SAyBpCQ,OAzBoC,GAyB1BC,EAAE,IAAI;AACZ,YAAMC,OAAO,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA7C,CAAhB;AACA,aAAOC,OAAP;AACH,KA5BmC;;AAAA,SA8BpCG,aA9BoC,GA8BpBJ,EAAE,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,OAAO,GAAG;AACZD,QAAAA,EAAE,EAAE,CADQ;AAEZK,QAAAA,KAAK,EAAE,YAFK;AAGZC,QAAAA,GAAG,EAAE,mBAHO;AAIZC,QAAAA,KAAK,EAAE,EAJK;AAKZC,QAAAA,OAAO,EAAE,SALG;AAMZC,QAAAA,IAAI,EACF,8fAPU;AAQZC,QAAAA,MAAM,EAAE,KARI;AASZC,QAAAA,KAAK,EAAE,CATK;AAUZC,QAAAA,KAAK,EAAE;AAVK,OAAhB;AAYA,WAAKC,QAAL,CAAc,MAAM;AAChB,eAAO;AAACf,UAAAA,cAAc,EAAEG;AAAjB,SAAP;AAAiC,OADrC,EAEI,MAAM;AAACa,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAAiC,OAF5C;AAGAD,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWE,cAAvB;AACH,KAzDmC;AAAA;;AAMpCkB,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnB,KAAL,CAAWE,cAAvB;AACH,GAVmC,CAapC;;;AACAmB,EAAAA,WAAW,GAAG;AACV,QAAIC,YAAY,GAAG,EAAnB;AACA1B,IAAAA,aAAa,CAAC2B,OAAd,CAAsBhB,IAAI,IAAI;AAC1B,YAAMiB,UAAU,GAAG,EAAC,GAAGjB;AAAJ,OAAnB;AACAe,MAAAA,YAAY,CAACG,IAAb,CAAkBD,UAAlB;AACH,KAHD;AAIA,SAAKP,QAAL,CAAc,MAAM;AAChB,aAAO;AAAChB,QAAAA,QAAQ,EAAEqB;AAAX,OAAP;AACH,KAFD;AAGH;;AAoCDI,EAAAA,SAAS,GAAG;AACRR,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAC5B,GAAG,KAAK3B,KADoB;AACb;AACfQ,QAAAA,aAAa,EAAE,KAAKA,aAFQ;AAG5BkB,QAAAA,SAAS,EAAE,KAAKA;AAHY,OAAhC;AAAA,gBAKK,KAAKE,KAAL,CAAWC;AALhB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAzEmC;;AA4ExC,MAAMC,eAAe,GAAGjC,cAAc,CAACkC,QAAvC;AAEA,SAAQhC,eAAR,EAAyB+B,eAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        productDetails: detailProduct\n    }\n\n    componentDidMount() {\n        this.setProducts();\n        console.log('context component was updated')\n        console.log(this.state.productDetails)\n    }\n\n\n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    getItem = id => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    }\n\n    handleDetails = id => {\n        // let tempProduct;\n        // this.state.products.forEach( item => {\n        //     if (item.id === id) {\n        //         tempProduct = {...item};\n        //         console.log('I found it! it is:');\n        //         console.log(tempProduct);\n        //     }\n        // });\n        // const product = this.getItem(id);\n        const product = {\n            id: 2,\n            title: \"Samsung S7\",\n            img: \"img/product-2.png\",\n            price: 16,\n            company: \"SAMSUNG\",\n            info:\n              \"Lorem ipsum dolor amet offal butcher quinoa sustainable gastropub, echo park actually green juice sriracha paleo. Brooklyn sriracha semiotics, DIY coloring book mixtape craft beer sartorial hella blue bottle. Tote bag wolf authentic try-hard put a bird on it mumblecore. Unicorn lumbersexual master cleanse blog hella VHS, vaporware sartorial church-key cardigan single-origin coffee lo-fi organic asymmetrical. Taxidermy semiotics celiac stumptown scenester normcore, ethical helvetica photo booth gentrify.\",\n            inCart: false,\n            count: 0,\n            total: 0\n          }\n        this.setState(() => {\n            return {productDetails: product}}, \n            () => {console.log(\"state updated!!!!\")});\n        console.log(\"after change the detail product is\")\n        console.log(this.state.productDetails)\n    }\n\n    addToCart() {\n        console.log('hello from addToCart');\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider value={{\n                ...this.state, //pass the whole state to this object\n                handleDetails: this.handleDetails,\n                addToCart: this.addToCart,\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}