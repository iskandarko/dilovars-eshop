{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/components/Product.js\";\nimport React, { Component } from 'react';\nimport { Col, Card, Button, Container } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { ProductConsumer } from '../context';\n\nclass Product extends Component {\n  render() {\n    const {\n      id,\n      title,\n      img,\n      price,\n      inCart\n    } = this.props.product;\n    return /*#__PURE__*/_jsxDEV(Col, {\n      className: \"my-3 mx-auto\",\n      xs: \"9\",\n      sm: \"6\",\n      lg: \"4\",\n      xl: \"3\",\n      children: /*#__PURE__*/_jsxDEV(ProductConsumer, {\n        children: value => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            onClick: () => {\n              value.handleDetails(id);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/details\",\n              children: /*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: img,\n                alt: \"product\",\n                className: \"p-5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"p-0\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-end\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  disabled: inCart,\n                  children: inCart ? \"В корзине\" : \"Добавить\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                className: \"d-flex justify-content-between\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"align-self-center mb-0\",\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"mb-0\",\n                  children: [\"$\", price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 29\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n} //Setting the required types for the props values (throws an error to the console, if not matched)\n\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.number,\n    img: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n    inCart: PropTypes.bool,\n    total: PropTypes.number\n  }).isRequired\n};\nexport default Product;","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/components/Product.js"],"names":["React","Component","Col","Card","Button","Container","PropTypes","ProductConsumer","Product","render","id","title","img","price","inCart","props","product","value","handleDetails","propTypes","shape","number","string","bool","total","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,iBAA7C;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,eAAR,QAA8B,YAA9B;;AAEA,MAAMC,OAAN,SAAsBP,SAAtB,CAAgC;AAC5BQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA,GAAb;AAAkBC,MAAAA,KAAlB;AAAyBC,MAAAA;AAAzB,QAAoC,KAAKC,KAAL,CAAWC,OAArD;AACA,wBACI,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAC,GAAjC;AAAqC,MAAA,EAAE,EAAC,GAAxC;AAA4C,MAAA,EAAE,EAAC,GAA/C;AAAmD,MAAA,EAAE,EAAC,GAAtD;AAAA,6BACI,QAAC,eAAD;AAAA,kBACKC,KAAK,IAAI;AACN,8BACI,QAAC,IAAD;AACI,YAAA,OAAO,EAAE,MAAM;AACXA,cAAAA,KAAK,CAACC,aAAN,CAAoBR,EAApB;AACH,aAHL;AAAA,oCAKI;AAAG,cAAA,IAAI,EAAC,UAAR;AAAA,qCACI,QAAC,IAAD,CAAM,GAAN;AACI,gBAAA,OAAO,EAAC,KADZ;AAEI,gBAAA,GAAG,EAAEE,GAFT;AAGI,gBAAA,GAAG,EAAC,SAHR;AAII,gBAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBALJ,eAaI,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,KAArB;AAAA,sCACI;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,uCACI,QAAC,MAAD;AACI,kBAAA,OAAO,EAAC,SADZ;AAEI,kBAAA,QAAQ,EAAEE,MAFd;AAAA,4BAIKA,MAAM,GAAG,WAAH,GAAiB;AAJ5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eASI,QAAC,IAAD,CAAM,MAAN;AAAa,gBAAA,SAAS,EAAC,gCAAvB;AAAA,wCACI;AAAG,kBAAA,SAAS,EAAC,wBAAb;AAAA,4BAAuCH;AAAvC;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAI,kBAAA,SAAS,EAAC,MAAd;AAAA,kCAAuBE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AA8BH;AAhCL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AAzC2B,C,CA4ChC;;;AACAL,OAAO,CAACW,SAAR,GAAoB;AAChBH,EAAAA,OAAO,EAAEV,SAAS,CAACc,KAAV,CAAgB;AACrBV,IAAAA,EAAE,EAAEJ,SAAS,CAACe,MADO;AAErBT,IAAAA,GAAG,EAAEN,SAAS,CAACgB,MAFM;AAGrBX,IAAAA,KAAK,EAAEL,SAAS,CAACgB,MAHI;AAIrBT,IAAAA,KAAK,EAAEP,SAAS,CAACe,MAJI;AAKrBP,IAAAA,MAAM,EAAER,SAAS,CAACiB,IALG;AAMrBC,IAAAA,KAAK,EAAElB,SAAS,CAACe;AANI,GAAhB,EAONI;AARa,CAApB;AAYA,eAAejB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Col, Card, Button, Container } from 'react-bootstrap';\nimport {PropTypes} from 'prop-types';\nimport {ProductConsumer} from '../context';\n\nclass Product extends Component {\n    render() { \n        const { id, title, img, price, inCart } = this.props.product;\n        return ( \n            <Col className=\"my-3 mx-auto\" xs=\"9\" sm=\"6\" lg=\"4\" xl=\"3\">\n                <ProductConsumer>\n                    {value => {\n                        return(\n                            <Card \n                                onClick={() => {\n                                    value.handleDetails(id)\n                                }}\n                            >\n                                <a href=\"/details\">\n                                    <Card.Img \n                                        variant=\"top\" \n                                        src={img} \n                                        alt=\"product\" \n                                        className=\"p-5\"\n                                    />\n                                </a>\n                                <Card.Body className=\"p-0\">\n                                    <div className=\"d-flex justify-content-end\">\n                                        <Button \n                                            variant=\"success\" \n                                            disabled={inCart} \n                                        >\n                                            {inCart ? \"В корзине\" : \"Добавить\"}\n                                        </Button>\n                                    </div>\n                                    <Card.Footer className=\"d-flex justify-content-between\">\n                                        <p className=\"align-self-center mb-0\">{title}</p>\n                                        <h5 className=\"mb-0\">${price}</h5>\n                                    </Card.Footer>\n                                </Card.Body>\n                            </Card>\n                        );\n                    }}\n                </ProductConsumer>\n            </Col>\n         );\n    }\n}\n \n//Setting the required types for the props values (throws an error to the console, if not matched)\nProduct.propTypes = {\n    product: PropTypes.shape({\n        id: PropTypes.number,\n        img: PropTypes.string,\n        title: PropTypes.string,\n        price: PropTypes.number,\n        inCart: PropTypes.bool,\n        total: PropTypes.number\n    }).isRequired\n}\n\n \nexport default Product;"]},"metadata":{},"sourceType":"module"}