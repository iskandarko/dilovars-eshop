{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct\n    };\n\n    this.getItem = id => {\n      const tempProduct = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetails = id => {\n      // let tempProduct;\n      // this.state.products.forEach( item => {\n      //     if (item.id === id) {\n      //         tempProduct = {...item};\n      //         console.log('I found it! it is:');\n      //         console.log(tempProduct);\n      //     }\n      // });\n      const tempProduct = this.state.products.find(item => item.id === id);\n      this.setState(() => {\n        return {\n          detailProduct: tempProduct\n        };\n      });\n      console.log(\"after change the detail product is\");\n      console.log(this.state.detailProduct);\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts.push(singleItem);\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  addToCart() {\n    console.log('hello from addToCart');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        //pass the whole state to this object\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","getItem","id","tempProduct","find","item","product","handleDetails","setState","console","log","componentDidMount","setProducts","tempProducts","forEach","singleItem","push","addToCart","render","props","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC5B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJN,MAAAA,aAAa,EAAEA;AAFX,KAD4B;;AAAA,SAuBpCO,OAvBoC,GAuB1BC,EAAE,IAAI;AACZ,YAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA7C,CAApB;AACA,aAAOI,OAAP;AACH,KA1BmC;;AAAA,SA4BpCC,aA5BoC,GA4BnBL,EAAD,IAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,WAAW,GAAG,KAAKJ,KAAL,CAAWC,QAAX,CAAoBI,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA7C,CAApB;AACA,WAAKM,QAAL,CAAc,MAAM;AAChB,eAAO;AAACd,UAAAA,aAAa,EAAES;AAAhB,SAAP;AACH,OAFD;AAGAM,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWL,aAAvB;AACH,KA3CmC;AAAA;;AAMpCiB,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACH,GARmC,CAWpC;;;AACAA,EAAAA,WAAW,GAAG;AACV,QAAIC,YAAY,GAAG,EAAnB;AACAlB,IAAAA,aAAa,CAACmB,OAAd,CAAsBT,IAAI,IAAI;AAC1B,YAAMU,UAAU,GAAG,EAAC,GAAGV;AAAJ,OAAnB;AACAQ,MAAAA,YAAY,CAACG,IAAb,CAAkBD,UAAlB;AACH,KAHD;AAIA,SAAKP,QAAL,CAAc,MAAM;AAChB,aAAO;AAACR,QAAAA,QAAQ,EAAEa;AAAX,OAAP;AACH,KAFD;AAGH;;AAwBDI,EAAAA,SAAS,GAAG;AACRR,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAC5B,GAAG,KAAKnB,KADoB;AACb;AACfQ,QAAAA,aAAa,EAAE,KAAKA,aAFQ;AAG5BU,QAAAA,SAAS,EAAE,KAAKA;AAHY,OAAhC;AAAA,gBAKK,KAAKE,KAAL,CAAWC;AALhB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA3DmC;;AA8DxC,MAAMC,eAAe,GAAGzB,cAAc,CAAC0B,QAAvC;AAEA,SAAQxB,eAAR,EAAyBuB,eAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: detailProduct\n    }\n\n    componentDidMount() {\n        this.setProducts();\n    }\n\n\n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    getItem = id => {\n        const tempProduct = this.state.products.find(item => item.id === id);\n        return product;\n    }\n\n    handleDetails = (id) => {\n        // let tempProduct;\n        // this.state.products.forEach( item => {\n        //     if (item.id === id) {\n        //         tempProduct = {...item};\n        //         console.log('I found it! it is:');\n        //         console.log(tempProduct);\n        //     }\n        // });\n        const tempProduct = this.state.products.find(item => item.id === id);\n        this.setState(() => {\n            return {detailProduct: tempProduct}\n        });\n        console.log(\"after change the detail product is\")\n        console.log(this.state.detailProduct)\n    }\n\n    addToCart() {\n        console.log('hello from addToCart');\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider value={{\n                ...this.state, //pass the whole state to this object\n                handleDetails: this.handleDetails,\n                addToCart: this.addToCart,\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}