{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      productDetails: {}\n    };\n\n    this.getItem = index => {\n      let product = { ...this.state.products[index]\n      };\n      return product;\n    };\n\n    this.handleDetails = id => {\n      console.log(\"hello from handleDetails\");\n      console.log(\"handleDetails id is: \" + id); // let tempProduct;\n      // this.state.products.forEach( item => {\n      //     if (item.id === id) {\n      //         tempProduct = {...item};\n      //         console.log('I found it! it is:');\n      //         console.log(tempProduct);\n      //     }\n      // });\n      // const product = this.getItem(id);\n\n      const product = this.getItem(id);\n      console.log(\"handleDetails product is: \");\n      console.log(product);\n      this.setState(() => {\n        return {\n          productDetails: product\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    console.log(\"hello from setProducts\");\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts.push(singleItem);\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  } // getItem = id => {\n  //     console.log(\"hello from getItem\")\n  //     let product;\n  //     this.state.products.forEach( item => {\n  //         if (item.id === id) {\n  //             product = {...item};\n  //         }\n  //     });\n  //     // const product = this.state.products.find(item => item.id === id);\n  //     console.log(\"getItem id is: \" + id)\n  //     console.log(\"getItem product is: \")\n  //     console.log(product)\n  //     return product;\n  // }\n\n\n  addToCart() {\n    console.log('hello from addToCart');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","productDetails","getItem","index","product","handleDetails","id","console","log","setState","componentDidMount","setProducts","tempProducts","forEach","item","singleItem","push","addToCart","render","props","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC5B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,cAAc,EAAE;AAFZ,KAD4B;;AAAA,SAsCpCC,OAtCoC,GAsC1BC,KAAK,IAAI;AACf,UAAIC,OAAO,GAAG,EAAC,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBG,KAApB;AAAJ,OAAd;AACA,aAAOC,OAAP;AACH,KAzCmC;;AAAA,SA4CpCC,aA5CoC,GA4CpBC,EAAE,IAAI;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BF,EAAtC,EAFkB,CAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,YAAMF,OAAO,GAAG,KAAKF,OAAL,CAAaI,EAAb,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,WAAKK,QAAL,CAAc,MAAM;AAChB,eAAO;AAACR,UAAAA,cAAc,EAAEG;AAAjB,SAAP;AACH,OAFD;AAGH,KA9DmC;AAAA;;AAMpCM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACH,GARmC,CAUpC;;;AACAA,EAAAA,WAAW,GAAG;AACVJ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAII,YAAY,GAAG,EAAnB;AACAjB,IAAAA,aAAa,CAACkB,OAAd,CAAsBC,IAAI,IAAI;AAC1B,YAAMC,UAAU,GAAG,EAAC,GAAGD;AAAJ,OAAnB;AACAF,MAAAA,YAAY,CAACI,IAAb,CAAkBD,UAAlB;AACH,KAHD;AAIA,SAAKN,QAAL,CAAc,MAAM;AAChB,aAAO;AAACT,QAAAA,QAAQ,EAAEY;AAAX,OAAP;AACH,KAFD;AAGH,GArBmC,CAuBpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA4BAK,EAAAA,SAAS,GAAG;AACRV,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AACI,MAAA,KAAK,EAAE,EACH,GAAG,KAAKnB,KADL;AAEHM,QAAAA,aAAa,EAAE,KAAKA,aAFjB;AAGHY,QAAAA,SAAS,EAAE,KAAKA;AAHb,OADX;AAAA,gBAOK,KAAKE,KAAL,CAAWC;AAPhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAhFmC;;AAmFxC,MAAMC,eAAe,GAAGzB,cAAc,CAAC0B,QAAvC;AAEA,SAAQxB,eAAR,EAAyBuB,eAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        productDetails: {}\n    }\n\n    componentDidMount() {\n        this.setProducts();\n    }\n    \n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        console.log(\"hello from setProducts\")\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    // getItem = id => {\n    //     console.log(\"hello from getItem\")\n    //     let product;\n    //     this.state.products.forEach( item => {\n    //         if (item.id === id) {\n    //             product = {...item};\n    //         }\n    //     });\n    //     // const product = this.state.products.find(item => item.id === id);\n    //     console.log(\"getItem id is: \" + id)\n    //     console.log(\"getItem product is: \")\n    //     console.log(product)\n    //     return product;\n    // }\n\n    getItem = index => {\n        let product = {...this.state.products[index]};\n        return product;\n    }\n\n\n    handleDetails = id => {\n        console.log(\"hello from handleDetails\")\n        console.log(\"handleDetails id is: \" + id)\n        // let tempProduct;\n        // this.state.products.forEach( item => {\n        //     if (item.id === id) {\n        //         tempProduct = {...item};\n        //         console.log('I found it! it is:');\n        //         console.log(tempProduct);\n        //     }\n        // });\n        // const product = this.getItem(id);\n        const product = this.getItem(id);\n        console.log(\"handleDetails product is: \")\n        console.log(product)\n        this.setState(() => {\n            return {productDetails: product}\n        });\n    }\n\n    addToCart() {\n        console.log('hello from addToCart');\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider \n                value={{\n                    ...this.state, \n                    handleDetails: this.handleDetails,\n                    addToCart: this.addToCart,\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}