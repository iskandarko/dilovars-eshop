{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/components/Product.js\";\nimport React, { Component } from 'react';\nimport { Col, Card, Button, Container } from 'react-bootstrap';\nimport { PropTypes } from 'prop-types';\nimport { ProductConsumer } from '../context';\n\nconst Product = props => {\n  const {\n    id,\n    title,\n    img,\n    price,\n    inCart\n  } = props.product;\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"my-3 mx-auto\",\n    xs: \"9\",\n    sm: \"6\",\n    lg: \"4\",\n    xl: \"3\",\n    children: /*#__PURE__*/_jsxDEV(ProductConsumer, {\n      children: value => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => {\n            handleDetails(id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/details\",\n            children: /*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: img,\n              alt: \"product\",\n              className: \"p-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: \"p-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-end\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                disabled: inCart,\n                children: inCart ? \"В корзине\" : \"Добавить\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              className: \"d-flex justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"align-self-center mb-0\",\n                children: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-0\",\n                children: [\"$\", price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 29\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 13\n  }, this);\n}; //Setting the required types for the props values (throws an error to the console, if not matched)\n\n\n_c = Product;\nProduct.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.number,\n    img: PropTypes.string,\n    title: PropTypes.string,\n    price: PropTypes.number,\n    inCart: PropTypes.bool,\n    total: PropTypes.number\n  }).isRequired\n};\nexport default Product;\n\nvar _c;\n\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/components/Product.js"],"names":["React","Component","Col","Card","Button","Container","PropTypes","ProductConsumer","Product","props","id","title","img","price","inCart","product","value","handleDetails","propTypes","shape","number","string","bool","total","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,SAA5B,QAA6C,iBAA7C;AACA,SAAQC,SAAR,QAAwB,YAAxB;AACA,SAAQC,eAAR,QAA8B,YAA9B;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA;AAAzB,MAAoCL,KAAK,CAACM,OAAhD;AACA,sBACQ,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,IAAA,EAAE,EAAC,GAAjC;AAAqC,IAAA,EAAE,EAAC,GAAxC;AAA4C,IAAA,EAAE,EAAC,GAA/C;AAAmD,IAAA,EAAE,EAAC,GAAtD;AAAA,2BACI,QAAC,eAAD;AAAA,gBACKC,KAAK,IAAI;AACN,4BACI,QAAC,IAAD;AAAM,UAAA,OAAO,EAAE,MAAM;AAACC,YAAAA,aAAa,CAACP,EAAD,CAAb;AAAkB,WAAxC;AAAA,kCACI;AAAG,YAAA,IAAI,EAAC,UAAR;AAAA,mCACI,QAAC,IAAD,CAAM,GAAN;AACI,cAAA,OAAO,EAAC,KADZ;AAEI,cAAA,GAAG,EAAEE,GAFT;AAGI,cAAA,GAAG,EAAC,SAHR;AAII,cAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eASI,QAAC,IAAD,CAAM,IAAN;AAAW,YAAA,SAAS,EAAC,KAArB;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,4BAAf;AAAA,qCACI,QAAC,MAAD;AACI,gBAAA,OAAO,EAAC,SADZ;AAEI,gBAAA,QAAQ,EAAEE,MAFd;AAAA,0BAIKA,MAAM,GAAG,WAAH,GAAiB;AAJ5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eASI,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,SAAS,EAAC,gCAAvB;AAAA,sCACI;AAAG,gBAAA,SAAS,EAAC,wBAAb;AAAA,0BAAuCH;AAAvC;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAI,gBAAA,SAAS,EAAC,MAAd;AAAA,gCAAuBE,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AA0BH;AA5BL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADR;AAoCH,CAtCD,C,CAuCA;;;KAvCML,O;AAwCNA,OAAO,CAACU,SAAR,GAAoB;AAChBH,EAAAA,OAAO,EAAET,SAAS,CAACa,KAAV,CAAgB;AACrBT,IAAAA,EAAE,EAAEJ,SAAS,CAACc,MADO;AAErBR,IAAAA,GAAG,EAAEN,SAAS,CAACe,MAFM;AAGrBV,IAAAA,KAAK,EAAEL,SAAS,CAACe,MAHI;AAIrBR,IAAAA,KAAK,EAAEP,SAAS,CAACc,MAJI;AAKrBN,IAAAA,MAAM,EAAER,SAAS,CAACgB,IALG;AAMrBC,IAAAA,KAAK,EAAEjB,SAAS,CAACc;AANI,GAAhB,EAONI;AARa,CAApB;AAYA,eAAehB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Col, Card, Button, Container } from 'react-bootstrap';\nimport {PropTypes} from 'prop-types';\nimport {ProductConsumer} from '../context';\n\n\nconst Product = (props) => {\n    const { id, title, img, price, inCart } = props.product;\n    return (\n            <Col className=\"my-3 mx-auto\" xs=\"9\" sm=\"6\" lg=\"4\" xl=\"3\">\n                <ProductConsumer>\n                    {value => {\n                        return(\n                            <Card onClick={() => {handleDetails(id)}}>\n                                <a href=\"/details\">\n                                    <Card.Img \n                                        variant=\"top\" \n                                        src={img} \n                                        alt=\"product\" \n                                        className=\"p-5\"\n                                    />\n                                </a>\n                                <Card.Body className=\"p-0\">\n                                    <div className=\"d-flex justify-content-end\">\n                                        <Button \n                                            variant=\"success\" \n                                            disabled={inCart} \n                                        >\n                                            {inCart ? \"В корзине\" : \"Добавить\"}\n                                        </Button>\n                                    </div>\n                                    <Card.Footer className=\"d-flex justify-content-between\">\n                                        <p className=\"align-self-center mb-0\">{title}</p>\n                                        <h5 className=\"mb-0\">${price}</h5>\n                                    </Card.Footer>\n                                </Card.Body>\n                            </Card>\n                        );\n                    }}\n                    \n\n                </ProductConsumer>\n            </Col>\n    );\n}\n//Setting the required types for the props values (throws an error to the console, if not matched)\nProduct.propTypes = {\n    product: PropTypes.shape({\n        id: PropTypes.number,\n        img: PropTypes.string,\n        title: PropTypes.string,\n        price: PropTypes.number,\n        inCart: PropTypes.bool,\n        total: PropTypes.number\n    }).isRequired\n}\n\n \nexport default Product;"]},"metadata":{},"sourceType":"module"}