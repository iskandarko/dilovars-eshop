{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailsProduct: {}\n    };\n\n    this.getItem = id => {\n      console.log(\"hello from getItem\");\n      let product;\n      this.state.products.forEach(item => {\n        if (item.id === id) {\n          product = { ...item\n          };\n        }\n      }); // const product = this.state.products.find(item => item.id === id);\n\n      console.log(\"getItem id is: \" + id);\n      console.log(\"getItem product is: \");\n      console.log(product);\n      return product;\n    };\n\n    this.handleDetails = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailsProduct: product\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Context has mounted\");\n    this.setProducts();\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    console.log(\"hello from setProducts\");\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts.push(singleItem);\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  addToCart() {\n    console.log('hello from addToCart');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        setProducts: this.setProducts,\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart,\n        getItem: this.getItem\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","detailsProduct","getItem","id","console","log","product","forEach","item","handleDetails","setState","componentDidMount","setProducts","tempProducts","singleItem","push","addToCart","render","props","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC5B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,cAAc,EAAE;AAFZ,KAD4B;;AAAA,SAwBpCC,OAxBoC,GAwB1BC,EAAE,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,UAAIC,OAAJ;AACA,WAAKP,KAAL,CAAWC,QAAX,CAAoBO,OAApB,CAA6BC,IAAI,IAAI;AACjC,YAAIA,IAAI,CAACL,EAAL,KAAYA,EAAhB,EAAoB;AAChBG,UAAAA,OAAO,GAAG,EAAC,GAAGE;AAAJ,WAAV;AACH;AACJ,OAJD,EAHY,CAQZ;;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBF,EAAhC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,aAAOA,OAAP;AACH,KArCmC;;AAAA,SA6CpCG,aA7CoC,GA6CpBN,EAAE,IAAI;AAClB,YAAMG,OAAO,GAAG,KAAKJ,OAAL,CAAaC,EAAb,CAAhB;AACA,WAAKO,QAAL,CAAc,MAAM;AAChB,eAAO;AAACT,UAAAA,cAAc,EAAEK;AAAjB,SAAP;AACH,OAFD;AAGH,KAlDmC;AAAA;;AAMpCK,EAAAA,iBAAiB,GAAG;AAChBP,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKO,WAAL;AACH,GATmC,CAWpC;;;AACAA,EAAAA,WAAW,GAAG;AACVR,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,QAAIQ,YAAY,GAAG,EAAnB;AACAlB,IAAAA,aAAa,CAACY,OAAd,CAAsBC,IAAI,IAAI;AAC1B,YAAMM,UAAU,GAAG,EAAC,GAAGN;AAAJ,OAAnB;AACAK,MAAAA,YAAY,CAACE,IAAb,CAAkBD,UAAlB;AACH,KAHD;AAIA,SAAKJ,QAAL,CAAc,MAAM;AAChB,aAAO;AAACV,QAAAA,QAAQ,EAAEa;AAAX,OAAP;AACH,KAFD;AAGH;;AA8BDG,EAAAA,SAAS,GAAG;AACRZ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDY,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AACI,MAAA,KAAK,EAAE,EACH,GAAG,KAAKlB,KADL;AAEHa,QAAAA,WAAW,EAAE,KAAKA,WAFf;AAGHH,QAAAA,aAAa,EAAE,KAAKA,aAHjB;AAIHO,QAAAA,SAAS,EAAE,KAAKA,SAJb;AAKHd,QAAAA,OAAO,EAAE,KAAKA;AALX,OADX;AAAA,gBASK,KAAKgB,KAAL,CAAWC;AAThB;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAtEmC;;AAyExC,MAAMC,eAAe,GAAGxB,cAAc,CAACyB,QAAvC;AAEA,SAAQvB,eAAR,EAAyBsB,eAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailsProduct: {}\n    }\n\n    componentDidMount() {\n        console.log(\"Context has mounted\")\n        this.setProducts();\n    }\n    \n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        console.log(\"hello from setProducts\")\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    getItem = id => {\n        console.log(\"hello from getItem\")\n        let product;\n        this.state.products.forEach( item => {\n            if (item.id === id) {\n                product = {...item};\n            }\n        });\n        // const product = this.state.products.find(item => item.id === id);\n        console.log(\"getItem id is: \" + id)\n        console.log(\"getItem product is: \")\n        console.log(product)\n        return product;\n    }\n\n    // getItem = index => {\n    //     let product = {...this.state.products[index]};\n    //     return product;\n    // }\n\n\n    handleDetails = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailsProduct: product}\n        });\n    }\n\n    addToCart() {\n        console.log('hello from addToCart');\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider \n                value={{\n                    ...this.state, \n                    setProducts: this.setProducts,\n                    handleDetails: this.handleDetails,\n                    addToCart: this.addToCart,\n                    getItem: this.getItem\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}