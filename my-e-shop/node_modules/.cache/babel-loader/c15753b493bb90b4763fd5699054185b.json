{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      productDetails: {}\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetails = id => {\n      // let tempProduct;\n      // this.state.products.forEach( item => {\n      //     if (item.id === id) {\n      //         tempProduct = {...item};\n      //         console.log('I found it! it is:');\n      //         console.log(tempProduct);\n      //     }\n      // });\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          productDetails: product\n        };\n      }, () => {\n        console.log(\"state updated!!!!\");\n      });\n      console.log(\"after change the detail product is\");\n      console.log(this.state.productDetails);\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n    console.log('context component was updated');\n    console.log(this.state.productDetails);\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      }; // tempProducts.push(singleItem);\n\n      tempProducts = [...tempProducts, singleItem];\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  addToCart() {\n    console.log('hello from addToCart');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        //pass the whole state to this object\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","productDetails","getItem","id","product","find","item","handleDetails","setState","console","log","componentDidMount","setProducts","tempProducts","forEach","singleItem","addToCart","render","props","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,gBAAGJ,KAAK,CAACK,aAAN,EAAvB;;AAEA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC5B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,cAAc,EAAE;AAFZ,KAD4B;;AAAA,SA0BpCC,OA1BoC,GA0B1BC,EAAE,IAAI;AACZ,YAAMC,OAAO,GAAG,KAAKL,KAAL,CAAWC,QAAX,CAAoBK,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAA7C,CAAhB;AACA,aAAOC,OAAP;AACH,KA7BmC;;AAAA,SA+BpCG,aA/BoC,GA+BpBJ,EAAE,IAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAMC,OAAO,GAAG,KAAKF,OAAL,CAAaC,EAAb,CAAhB;AACA,WAAKK,QAAL,CAAc,MAAM;AAChB,eAAO;AAACP,UAAAA,cAAc,EAAEG;AAAjB,SAAP;AAAiC,OADrC,EAEI,MAAM;AAACK,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAAiC,OAF5C;AAGAD,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWE,cAAvB;AACH,KA9CmC;AAAA;;AAMpCU,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAL,CAAWE,cAAvB;AACH,GAVmC,CAapC;;;AACAW,EAAAA,WAAW,GAAG;AACV,QAAIC,YAAY,GAAG,EAAnB;AACAlB,IAAAA,aAAa,CAACmB,OAAd,CAAsBR,IAAI,IAAI;AAC1B,YAAMS,UAAU,GAAG,EAAC,GAAGT;AAAJ,OAAnB,CAD0B,CAE1B;;AACAO,MAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBE,UAAlB,CAAf;AACH,KAJD;AAKA,SAAKP,QAAL,CAAc,MAAM;AAChB,aAAO;AAACR,QAAAA,QAAQ,EAAEa;AAAX,OAAP;AACH,KAFD;AAGH;;AAwBDG,EAAAA,SAAS,GAAG;AACRP,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE,EAC5B,GAAG,KAAKlB,KADoB;AACb;AACfQ,QAAAA,aAAa,EAAE,KAAKA,aAFQ;AAG5BS,QAAAA,SAAS,EAAE,KAAKA;AAHY,OAAhC;AAAA,gBAKK,KAAKE,KAAL,CAAWC;AALhB;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AA9DmC;;AAiExC,MAAMC,eAAe,GAAGxB,cAAc,CAACyB,QAAvC;AAEA,SAAQvB,eAAR,EAAyBsB,eAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        productDetails: {}\n    }\n\n    componentDidMount() {\n        this.setProducts();\n        console.log('context component was updated')\n        console.log(this.state.productDetails)\n    }\n\n\n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            // tempProducts.push(singleItem);\n            tempProducts = [...tempProducts, singleItem]\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    getItem = id => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    }\n\n    handleDetails = id => {\n        // let tempProduct;\n        // this.state.products.forEach( item => {\n        //     if (item.id === id) {\n        //         tempProduct = {...item};\n        //         console.log('I found it! it is:');\n        //         console.log(tempProduct);\n        //     }\n        // });\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {productDetails: product}}, \n            () => {console.log(\"state updated!!!!\")});\n        console.log(\"after change the detail product is\")\n        console.log(this.state.productDetails)\n    }\n\n    addToCart() {\n        console.log('hello from addToCart');\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider value={{\n                ...this.state, //pass the whole state to this object\n                handleDetails: this.handleDetails,\n                addToCart: this.addToCart,\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}