{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js\";\nimport React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\nconst ProductContext = /*#__PURE__*/React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      cart: [],\n      detailsProduct: {},\n      modalProduct: detailProduct,\n      modalOpen: false\n    };\n\n    this.getItem = id => {\n      // const product;\n      // this.state.products.forEach( item => {\n      //     if (item.id === id) {\n      //         product = {...item};\n      //     }\n      // });\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetails = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailsProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      console.log('Hello from addToCart!');\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price; //???\n\n      product.total = price; //???\n\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.openModal = id => {\n      console.log('hello from openModal');\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      console.log('hello from closeModal');\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  } //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n\n\n  setProducts() {\n    let tempProducts = [];\n    storeProducts.forEach(item => {\n      const singleItem = { ...item\n      };\n      tempProducts.push(singleItem);\n    });\n    this.setState(() => {\n      return {\n        products: tempProducts\n      };\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n      value: { ...this.state,\n        setProducts: this.setProducts,\n        handleDetails: this.handleDetails,\n        addToCart: this.addToCart,\n        getItem: this.getItem,\n        openModal: this.openModal,\n        closeModal: this.closeModal\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/iskandar/Google Drive/Coding/Dilovars-eshop/my-e-shop/src/context.js"],"names":["React","Component","detailProduct","storeProducts","ProductContext","createContext","ProductProvider","state","products","cart","detailsProduct","modalProduct","modalOpen","getItem","id","product","find","item","handleDetails","setState","addToCart","console","log","tempProducts","index","indexOf","inCart","count","price","total","openModal","closeModal","componentDidMount","setProducts","forEach","singleItem","push","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { detailProduct, storeProducts } from './data';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        cart: [],\n        detailsProduct: {},\n        modalProduct: detailProduct,\n        modalOpen: false\n    }\n\n    componentDidMount() {\n        this.setProducts();\n    }\n    \n    //method to avoid passing of refferences to storeProducts items but instead passing the values to the state\n    setProducts() { \n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts.push(singleItem);\n        });\n        this.setState(() => {\n            return {products: tempProducts}\n        });\n    }\n\n    getItem = id => {\n        // const product;\n        // this.state.products.forEach( item => {\n        //     if (item.id === id) {\n        //         product = {...item};\n        //     }\n        // });\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n    }\n\n\n    handleDetails = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {detailsProduct: product}\n        });\n    }\n\n    addToCart = id => {\n        console.log('Hello from addToCart!');\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1; \n        const price = product.price; //???\n        product.total = price; //???\n        this.setState(() => {\n            return (\n                {\n                    products: tempProducts,\n                    cart: [...this.state.cart, product]\n                } \n            );\n        }, () => {\n            console.log(this.state);\n        });\n    }\n\n    openModal = id => {\n        console.log('hello from openModal');\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct: product, modalOpen: true};\n        });\n    }\n\n    closeModal = () => {\n        console.log('hello from closeModal');\n        this.setState(() => {\n            return {modalOpen: false}\n        });\n    }\n\n    render() { \n        return ( \n            <ProductContext.Provider \n                value={{\n                    ...this.state, \n                    setProducts: this.setProducts,\n                    handleDetails: this.handleDetails,\n                    addToCart: this.addToCart,\n                    getItem: this.getItem,\n                    openModal: this.openModal,\n                    closeModal: this.closeModal,\n                }}\n            >\n                {this.props.children}\n            </ProductContext.Provider>\n         );\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n \nexport {ProductProvider, ProductConsumer};"]},"metadata":{},"sourceType":"module"}